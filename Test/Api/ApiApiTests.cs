/* 
 * SensorPush Public API
 *
 * This is a swagger definition for the SensorPush public REST API. Download the definition file [here](https://api.sensorpush.com/api/v1/support/swagger/swagger-v1.json).
 *
 * OpenAPI spec version: v1.0.20200327
 * Contact: support@sensorpush.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Mrc.SensorPushCore.Client;
using Mrc.SensorPushCore.Api;
using Mrc.SensorPushCore.Model;

namespace Mrc.SensorPushCore.Test
{
    /// <summary>
    ///  Class for testing ApiApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ApiApiTests
    {
        private ApiApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ApiApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ApiApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ApiApi
            //Assert.IsInstanceOfType(typeof(ApiApi), instance, "instance is a ApiApi");
        }

        
        /// <summary>
        /// Test AccessToken
        /// </summary>
        [Test]
        public void AccessTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AccessTokenRequest accessTokenRequest = null;
            //var response = instance.AccessToken(accessTokenRequest);
            //Assert.IsInstanceOf<AccessTokenResponse> (response, "response is AccessTokenResponse");
        }
        
        /// <summary>
        /// Test Download
        /// </summary>
        [Test]
        public void DownloadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReportsRequest reportsRequest = null;
            //instance.Download(reportsRequest);
            
        }
        
        /// <summary>
        /// Test Gateways
        /// </summary>
        [Test]
        public void GatewaysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewaysRequest gatewaysRequest = null;
            //var response = instance.Gateways(gatewaysRequest);
            //Assert.IsInstanceOf<Gateways> (response, "response is Gateways");
        }
        
        /// <summary>
        /// Test List
        /// </summary>
        [Test]
        public void ListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReportsRequest reportsRequest = null;
            //var response = instance.List(reportsRequest);
            //Assert.IsInstanceOf<ListResponse> (response, "response is ListResponse");
        }
        
        /// <summary>
        /// Test OauthAuthorizePost
        /// </summary>
        [Test]
        public void OauthAuthorizePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AuthorizeRequest authorizeRequest = null;
            //var response = instance.OauthAuthorizePost(authorizeRequest);
            //Assert.IsInstanceOf<AuthorizeResponse> (response, "response is AuthorizeResponse");
        }
        
        /// <summary>
        /// Test RootPost
        /// </summary>
        [Test]
        public void RootPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RootPost();
            //Assert.IsInstanceOf<Status> (response, "response is Status");
        }
        
        /// <summary>
        /// Test Samples
        /// </summary>
        [Test]
        public void SamplesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SamplesRequest samplesRequest = null;
            //var response = instance.Samples(samplesRequest);
            //Assert.IsInstanceOf<Samples> (response, "response is Samples");
        }
        
        /// <summary>
        /// Test Sensors
        /// </summary>
        [Test]
        public void SensorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SensorsRequest sensorsRequest = null;
            //var response = instance.Sensors(sensorsRequest);
            //Assert.IsInstanceOf<Sensors> (response, "response is Sensors");
        }
        
        /// <summary>
        /// Test Token
        /// </summary>
        [Test]
        public void TokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TokenRequest tokenRequest = null;
            //var response = instance.Token(tokenRequest);
            //Assert.IsInstanceOf<TokenResponse> (response, "response is TokenResponse");
        }
        
    }

}
